#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    // automouse-layer = <4>;
    // scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp COMMA    &kp PERIOD  &kp U       &kp L                        &kp P                                                              &kp J                 &kp W        &kp R       &kp Y  &kp ESCAPE
&mt LSHFT E  &kp I       &mt LALT A  &mt LCTRL O                  &mt LGUI MINUS          &kp LS(LG(S))               &kp MINUS      &mt RGUI K            &mt RCTRL T  &mt RALT N  &kp S  &mt RSHIFT H
&kp Q        &kp X       &kp C       &kp V                        &kp F                   &kp COLON                   &kp SEMICOLON  &kp G                 &kp D        &kp M       &kp Z  &kp B
&mkp LCLK    &mkp MCLK   &mkp RCLK   &lt_to_layer_0 2 INT_HENKAN  &lt_to_layer_0 1 SPACE  &mt LSHFT INT_MUHENKAN      &kp BACKSPACE  &lt_to_layer_0 4 DEL                                  &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH            &kp DOLLAR       &kp PERCENT                         &kp CARET       &kp AMPERSAND    &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans           &trans       &mt LALT BACKSLASH  &mt LCTRL SLASH  &mt LGUI GRAVE  &trans      &trans  &mt RGUI MINUS  &mt RCTRL EQUAL  &mt RALT SQT       &kp LEFT_BRACKET      &mt RSHFT RIGHT_BRACKET
&trans           &trans       &kp PIPE            &kp QUESTION     &kp TILDE       &trans      &trans  &kp UNDERSCORE  &kp PLUS         &kp DOUBLE_QUOTES  &kp LEFT_BRACE        &kp RIGHT_BRACE
&trans           &trans       &trans              &trans           &trans          &trans      &trans  &trans                                                                    &trans
            >;
        };

        NUM {
            bindings = <
&kp F1        &kp F2   &kp F3       &kp F4        &kp F5                                                        &kp COLON           &kp NUMBER_7        &kp NUMBER_8  &kp NUMBER_9  &trans
&mt LSHFT F6  &kp F7   &mt LALT F8  &mt LCTRL F9  &mt LGUI F10     &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &mt RGUI SEMICOLON  &mt RCTRL NUMBER_4  &mt RALT N5   &kp NUMBER_6  &trans
&kp F11       &kp F12  &kp F13      &kp F14       &kp PRINTSCREEN  &kp EQUAL                    &trans          &kp N0              &kp NUMBER_1        &kp N2        &kp NUMBER_3  &trans
&trans        &trans   &trans       &trans        &trans           &trans                       &trans          &trans                                                              &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans          &mmv MOVE_UP      &trans           &msc SCRL_UP      &trans                                   &trans          &trans         &trans        &trans     &mkp LCLK
&mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_RIGHT  &msc SCRL_LEFT    &msc SCRL_RIGHT  &mkp MB1      &mkp MB2  &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &trans
&trans          &mmv MOVE_Y(100)  &trans           &msc SCRL_DOWN    &trans           &trans        &trans    &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &mkp RCLK
&trans          &trans            &trans           &kp INT_MUHENKAN  &kp INT_HENKAN   &trans        &trans    &trans                                                  &mo 6
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
